# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master

pr:
  branches:
    include:
    - master

resources:
  repositories:
  - repository: sonic-mgmt-common
    type: github
    name: Azure/sonic-mgmt-common
    endpoint: build

stages:
- stage: Build
  jobs:
  - job:
    displayName: "build"
    timeoutInMinutes: 60

    pool:
      vmImage: ubuntu-20.04

    container:
      image: sonicdev-microsoft.azurecr.io:443/sonic-slave-buster:latest

    steps:
    - checkout: self
      clean: true
      submodules: recursive
      displayName: 'Checkout code'

    - checkout: sonic-mgmt-common
      clean: true
      submodules: recursive
      displayName: 'Checkout code'

    - task: DownloadPipelineArtifact@2
      inputs:
        source: specific
        project: build
        pipeline: 1
        artifact: sonic-buildimage.vs
        runVersion: 'latestFromBranch'
        runBranch: 'refs/heads/master'
      displayName: "Download sonic buildimage"

    - task: DownloadPipelineArtifact@2
      inputs:
        source: specific
        project: build
        pipeline: 127
        artifact: sonic-mgmt-common
        runVersion: 'latestFromBranch'
        runBranch: 'refs/heads/master'
      displayName: "Download sonic-mgmt-common"

    - script: |
        # REDIS
        sudo apt-get install -y redis-server
        sudo sed -ri 's/^# unixsocket/unixsocket/' /etc/redis/redis.conf
        sudo sed -ri 's/^unixsocketperm .../unixsocketperm 777/' /etc/redis/redis.conf
        sudo sed -ri 's/redis-server.sock/redis.sock/' /etc/redis/redis.conf
        sudo service redis-server start

        # LIBYANG
        sudo dpkg -i ../target/debs/buster/libyang*1.0.73*.deb
      displayName: "Install dependency"

    - script: |
        set -ex
        ls -l

        pushd sonic-mgmt-common

        NO_TEST_BINS=1 dpkg-buildpackage -rfakeroot -b -us -uc

        popd

        pushd sonic-telemetry

        dpkg-buildpackage -rfakeroot -us -uc -b -j$(nproc) && cp ../*.deb $(Build.ArtifactStagingDirectory)/
      displayName: "Build"

    - publish: $(Build.ArtifactStagingDirectory)/
      artifact: sonic-telemetry
      displayName: "Archive artifacts"

